# Values file for oralhistoryprod
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: uclalibrary/oral-history
  # changing this tag will cause a deploy via ArgoCD
  tag: v0.0.2
  pullPolicy: Always

# Chart documentation: https://github.com/bitnami/charts/tree/main/bitnami/solr
solr:
  # TODO: Solr heap size? docker-compose has SOLR_HEAP=4g
  enabled: true
  image:
    repository: bitnami/solr
    # This is the image version, not the chart version.
    tag: 8.11.1
  auth:
    enabled: true
    adminUsername: admin
    adminPassword: admin
  coreName: blacklight
  collection: blacklight-core
  persistence:
    enabled: true
    storageClass: "vsphere-csi-sc"
    size: 8Gi
    mountPath: /bitnami/solr

# Chart documentation: https://github.com/bitnami/charts/tree/main/bitnami/postgresql
postgresql:
  enabled: true
  image:
    repository: bitnami/postgresql
    # This is the image version, not the chart version.
    tag: 12.3.0
  auth:
    username: blacklight
    database: blacklight
  service:
    ports:
      postgresql: 5432
  primary:
    persistence:
      # TODO: Should enabled be true?
      enabled: false
      size: 10Gi

# TODO: Variable names and values were copied from .env - is this all right?
web:
  env:
    SOLR_URL: http://solr:8983/solr/blacklight-core
    POSTGRES_DB: oral_history
    POSTGRES_HOST: postgres
    POSTGRES_PASSWORD: '{{ .Values.externalSecrets.env.databasePassword }}'
    POSTGRES_USER: postgres
    DEPLOY_HOOK: CHANGEME
    DOCKER_PORTS: 80
    MAKE_WAVES: false
    PASSENGER_APP_ENV: production
    REGISTRY_HOST: index.docker.io/
    REGISTRY_URI: uclalibrary
    # TODO: Real value
    SITE_URI: oralhistory-k8s.library.ucla.edu
    TAG: dev
    TEST_DB: oral_history_test

# TODO: Add worker service
# worker:

externalSecrets:
  annotations:
    argocd.argoproj.io/sync-wave: "-3"
  refreshInterval: 10m
  secretStoreRef:
    name: systems-clustersecretstore
    kind: ClusterSecretStore
  env:
    negativeCaptchaSecret: /systems/prodrke01/oh-public/negative_captcha_secret
    databasePassword: /systems/prodrke01/oh-public/db_password
    solrAdminPassword: /systems/prodrke01/oh-public/solr_admin_password

# configure a registry token for access to your container registry, needs read permissions, create secret in Rancher, follow instructions:
# https://ranchermanager.docs.rancher.com/v2.5/how-to-guides/new-user-guides/kubernetes-resources-setup/kubernetes-and-docker-registries#creating-a-registry
# replace registry-token below with the name of the secret you created in the Rancher UI
imagePullSecrets: []
  # - registry-token
fullnameOverride: "oral-history"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: "true"
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    cert-manager.io/cluster-issuer: sectigo-acme-clusterissuer
    kubernetes.io/tls-acme: "true"

  hosts:
    # TODO: Set real production name
    - host: oralhistory-k8s.library.ucla.edu
      paths:
        - "/"

  tls:
    # TODO: Set real production name
   - secretName: oralhistory-k8s-tls
     hosts:
       - oralhistory-k8s.library.ucla.edu

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
