version: '2.2'
services:
  postgres:
    image: postgres:15
    env_file:
      - .env
      - .env.development
    ports:
      - "5432"
    volumes:
      - 'postgres:/var/lib/postgresql/data'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  solr:
    build: ./solr
    ports:
      - "8983:8983"
    environment:
      - SOLR_HEAP=4g
      - SOLR_HOME=/solr_home
      - SOLR_CONFIG_DIR=/solr_conf
    volumes:
      - solr:/solr_home
    healthcheck:
      test: ["CMD", "curl", "-f", "http://solr:8983/solr/blacklight-core/admin/ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  web:
    build:
      context: .
      target: web
      cache_from:
        - "${REGISTRY_HOST}${REGISTRY_URI}/oral-history:${TAG}"
    image: "${REGISTRY_HOST}${REGISTRY_URI}/oral-history:${TAG}"
    env_file:
      - .env
      - .env.development
    volumes:
      - .:/home/app/webapp
    # Keep the stdin open, so we can attach to our app container's process
    # and do things such as byebug, etc:
    stdin_open: true
    tty: true
    ports:
      - "${DOCKER_PORTS}"
      - "8000:80"
    environment:
      - VIRTUAL_HOST=oralhistory.test
      - VIRTUAL_PORT=80
    depends_on:
      postgres:
        condition: service_healthy
      solr:
        condition: service_healthy
      worker:
        condition: service_started
    # command: tail -f /dev/null
    command: >
      bash -lc "
        wait-for-it.sh postgres:5432 &&
        wait-for-it.sh solr:8983 &&
        cd /home/app/webapp &&
        passenger start --port 80
      "

  worker:
    build:
      context: .
      target: web
      cache_from:
        - "${REGISTRY_HOST}${REGISTRY_URI}/oral-history:${TAG}"
    env_file:
      - .env
      - .env.development
    volumes:
      - .:/home/app/webapp
    command: bin/delayed_job run
    depends_on:
      postgres:
        condition: service_healthy
      solr:
        condition: service_healthy
    command: >
      bash -lc "
        wait-for-it.sh postgres:5432 &&
        wait-for-it.sh solr:8983 &&
        cd /home/app/webapp &&
        RAILS_ENV=development bundle exec rails db:migrate &&
        RAILS_ENV=development bundle exec rails db:seed &&
        ./ops/worker.sh
      "

volumes:
  postgres:
  solr:
